
/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/
#include <iostream>
#define triangle(x) x*(x+1)/2
using namespace std;

int countDiv(long num) {
    long tester = 1;
    int count = 0;
    int lastQ = -1;   //the last quotient
    while(tester!=lastQ) {
        if(num%tester==0) {
            if(tester!=num/tester) {
                count+=2;
                lastQ = num/tester;
            }
            else count++;
        }
        tester++;
    }
    return count;
}
int main() {
    // declarations:
    int divisors, counter=2, currentDivisors;
    // housekeeping
    cout<<"Enter no of divisors: ";
    cin>>divisors;
    while(true) {
        currentDivisors = countDiv(triangle(counter));
        if(currentDivisors>divisors)
            break;
        counter++;
    }
    // eoj:
    cout<<"The smallest triangle number with more than "<<divisors<<" divisors is: "<<triangle(counter)<<endl;
    cout<<"And it's position is: "<<counter;
    return 0;
}
