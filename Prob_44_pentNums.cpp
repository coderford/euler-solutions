/*

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

*/
#include <iostream>
#include <cmath>
using namespace std;

long pent_num(int x) {
    return x*(3*x-1)/2;
}

bool isInt(double x) {
    if(((int)x) == x)
        return true;
    else
        return false;
}

bool is_pent(long x) {
    double D = 24*x+1;  //double is necessary as float is not precise enough...
    double sol = (sqrt(D)+1)/6; //i got a close but wrong answer because of float
    if(isInt(sol)) {
        //cout<<"pent: "<<sol<<endl;
        return true;
    }
    return false;
}

int main() {
    bool found = false;
    for(int i = 1; i<10000; i++) {
        for(int j = i; j<10000; j++) {
            long D = abs(pent_num(i)-pent_num(j));
            long S = pent_num(i)+pent_num(j);
            if(is_pent(D)&&is_pent(S)) {
                    cout<<"i: "<<pent_num(i)<<" j: "<<pent_num(j)<<endl;
                    cout<<"D: "<<D<<endl;
                    found = true;
                    break;
            }
            if(found)
                break;
        }
    }
}
